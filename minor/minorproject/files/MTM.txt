import java.util.*;
import java.io.*;

class MTM 
{
  static ArrayList<String> record_list = new ArrayList<String>();    
  static ArrayList<Integer> enrol_list = new ArrayList<Integer>();   
  static int enrol_array[]  ;

    public static void main(String args[]) throws Exception
    {
        String list;
        int i=0,n=0;
        int MAX_THREAD = 8 ;
        
        
        Scanner inFile = null;
 
         try {
        inFile = new Scanner(new File("file2.txt"));
        } catch (FileNotFoundException e) {

        e.printStackTrace();
        }

        while(inFile.hasNextLine()){
        record_list.add(inFile.nextLine());
        }

         
        System.out.println("\nORIGINAL DATA- "); 
        for (String record : record_list)
        {

        int count = 1;
        String result;         
        
        
         while(count < record.length())
         {
          if(Character.isDigit(record.charAt(count)) && record.charAt(count-1)== ' ')

         {

             System.out.println(record.substring(count));
              int enrol_no = Integer.parseInt(record.substring(count));
              enrol_list.add(enrol_no);
	  }
           count++;

          }     
       
       } 

        enrol_array = new int[enrol_list.size()];
        Iterator<Integer> iter = enrol_list.iterator();  //Converts an list into integer array
        for (int j=0;iter.hasNext();j++) {
            enrol_array[j] = iter.next();
        }                            
 
       System.out.println("\nTOTAL RECORDS - " + enrol_array.length);       

       int[] first = new int[enrol_array.length / 4 + 1];
       int[] second = new int[enrol_array.length / 4 ]; 
       int[] third = new int[enrol_array.length / 4 ];
       int[] fourth = new int[enrol_array.length / 4 + 1];   
       int[] fifth = new int[enrol_array.length / 2 + 1];
       int[] sixth = new int[enrol_array.length / 2 ];
       int[] seventh = new int[enrol_array.length ];     

        System.arraycopy(enrol_array, 0, first, 0, first.length);
        System.arraycopy(enrol_array, first.length, second, 0, second.length);   
        System.arraycopy(enrol_array, first.length + second.length, third, 0, third.length);
        System.arraycopy(enrol_array, first.length + second.length + third.length, fourth , 0,fourth.length-10);

      MultiThread m1 = new MultiThread("A",first); 
      MultiThread m2 = new MultiThread("B",second);
      MultiThread m3 = new MultiThread("C",third); 
      MultiThread m4 = new MultiThread("D",fourth); 

       for(int thread=1; thread < MAX_THREAD ; thread++){
        
        if(thread==1){

        new Thread(m1).run();
        
        first= m1.getarray();
        

        }else if(thread==2){
 
        new Thread(m2).run();
        
        second= m2.getarray();
   
        }else if(thread==3){
        
        new Thread(m3).run();
        
        third= m3.getarray();

  
        }else if(thread==4){
               
        new Thread(m4).run();
        
        fourth= m4.getarray();
        

        }else if (thread==5){
        
        Merge m5 = new Merge("E",first,second,fifth); 
                
        new Thread(m5).run();
        
        fifth= m5.getarray();

        }else if(thread==6){
        
        Merge m6 = new Merge("F",third,fourth,sixth); 
                
        new Thread(m6).run();
        
        sixth= m6.getarray();        

       }else if(thread==7){
        
       Merge m7 = new Merge("G",fifth,sixth,seventh); 
                
        new Thread(m7).run();
        
        seventh= m7.getarray();        

       }

}   
    
        System.out.println(" ");
        System.out.println(" ");
        System.out.println("Values after Merge Sort : ");

     for (int j=0;j<seventh.length;j++) {
            System.out.println(seventh[j]+" ");
         
         }
       

        writeToFile(seventh);
       
       }


public static void writeToFile(int[] sorted_array) throws Exception{
   
ArrayList<String> sorted_list = new ArrayList<String>() ;


File outFile = new File("Output.txt");
FileWriter fWriter = new FileWriter(outFile);
PrintWriter pWriter = new PrintWriter(fWriter);

 
for(int i=0; i < sorted_array.length ; i++)
{
  for(int j=0 ; j<enrol_array.length ; j++){

     if(sorted_array[i]==enrol_array[j])
    {
      sorted_list.add(record_list.get(j));  
    }
  }
}
     for(String rec : sorted_list)
     {
      //System.out.println(rec);
      pWriter.println(rec);
      }  
  pWriter.close();
}

}



